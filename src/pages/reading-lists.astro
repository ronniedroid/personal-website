---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
import BooksScroller from "../components/BooksScroller.astro";

const crumbs = [
    {
        name: "home",
        link: "/",
        disabled: false,
    },
    {
        name: "reading-list",
        link: "/reading-list",
        disabled: true,
    },
];

const sortBySeries = (a: any, b: any) => {
    if (a.data.series && b.data.series) {
        if (a.data.series < b.data.series) {
            return -1;
        }
        if (a.data.series > b.data.series) {
            return 1;
        }
        return 0;
    } else if (a.data.series) {
        return -1;
    } else if (b.data.series) {
        return 1;
    } else {
        return 0;
    }
};

const reading = await getCollection("books", ({ data }) => {
    return data.status == "Reading";
});

const finished = await getCollection("books", ({ data }) => {
    return data.status == "Finished";
});

finished.sort((a, b) => {
    return sortBySeries(a, b);
});

const unfinished = await getCollection("books", ({ data }) => {
    return data.status == "Unfinished";
});

unfinished.sort((a, b) => {
    return sortBySeries(a, b);
});

const awaited = await getCollection("books", ({ data }) => {
    return data.status == "Awaited";
});

awaited.sort((a, b) => {
    return sortBySeries(a, b);
});

const cancelled = await getCollection("books", ({ data }) => {
    return data.status == "Cancelled";
});

cancelled.sort((a, b) => {
    return sortBySeries(a, b);
});
---

<Layout title="Reading lists" crumbs={crumbs}>
    <h1 class="title">Reading Lists</h1>
    <p>
        Following are my reading lists, the lists are in no particular order,
        but series are sorted first to make sure all enteries of a series would
        be grouped together, I say reading, but I mostly do listening as
        audiobooks are my favorite way to consume books. The lists are as
        follows:
    </p>
    <ul class="toc">
        <li><a href="#reading">Currently Reading</a></li>
        <li><a href="#awaited">Awaited</a></li>
        <li><a href="#finished">Finished</a></li>
        <li><a href="#unfinished">Unfinished</a></li>
        <li><a href="#cancelled">Cancelled</a></li>
    </ul>
    <h2 class="subtitle" id="reading">Currently reading</h2>
    <p class="note">
        Books that I am currently reading, though I mostly focus on one book
        more than the others, I still do read more than one book at a time.
    </p>
    <div class="wrapper">
        <BooksScroller list={reading} />
    </div>
    <h2 class="subtitle" id="awaited">Awaited</h2>
    <p class="note">
        My wishlist, books that are either in queue or I am interesting in
        reading at a later time
    </p>
    <div class="wrapper">
        <BooksScroller list={awaited} />
    </div>
    <h2 class="subtitle" id="finished">Finished</h2>
    <p class="note">
        Books that I have finished reading, the following are the once I do
        rememeber.
    </p>
    <div class="wrapper">
        <BooksScroller list={finished} />
    </div>
    <h2 class="subtitle" id="unfinished">Unfinished</h2>
    <p class="note">
        Books that I have not finished reading, and intend to go back and
        re-read one day.
    </p>
    <div class="wrapper">
        <BooksScroller list={unfinished} />
    </div>
    <h2 class="subtitle" id="cancelled">Cancelled</h2>
    <p class="note">
        Books that I have finished reading, and I am not interested in finishing
        at all.
    </p>
    <div class="wrapper">
        <BooksScroller list={cancelled} />
    </div>
</Layout>

<style>
    p,
    li {
        font-size: var(--fs-sm);
        max-width: 75ch;
    }

    .note {
        max-width: 45ch;
    }

    .toc {
        list-style: none;
        padding-block: 1rem;
    }

    .toc a {
        color: var(--tertiary);
    }

    .toc a:hover,
    .toc a:focus {
        color: var(--on-surface);
    }

    .wrapper {
        overflow-x: hidden;
    }
</style>
