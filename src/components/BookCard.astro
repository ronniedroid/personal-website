---
interface Props {
    series: any;
    order: any;
    title: string;
    author: string;
    tags: Array<string>;
}

const { series, order, title, author, tags } = Astro.props;
---

<div class="book-card">
    {
        series ? (
            <p class="series-banner">
                #{order} of {series}
            </p>
        ) : (
            <p class="series-banner">Standalone</p>
        )
    }
    <h3>{title}</h3>
    <p class="author">By {author}</p>
    <ul class="tags">
        {tags.map((tag: string) => <li class="tag">{tag}</li>)}
    </ul>
</div>

<style>
    .book-card {
        background-color: var(--surface-container-low);
        color: var(--on-surface);
        border: 1px solid var(--outline-variant);
        border-radius: 1rem;
        padding-inline: 1rem;
        padding-block: 1rem;

        display: grid;

        width: 38ch;
        height: 13rem;
    }

    .book-card > h3 {
        font-size: var(--fs-fl-sm);
        font-weight: 500;
        color: var(--primary);
        align-self: start;
    }

    .author {
        font-weight: 500;
        align-self: start;
    }

    .series-banner {
        font-size: var(--fs-xs);
        align-self: start;
    }

    .tags {
        list-style: none;
        display: flex;
        flex-wrap: wrap;
        column-gap: 0.5rem;
        row-gap: 0.5rem;
        margin-block-start: 2rem;
        align-self: end;
    }

    .tag {
        background-color: var(--tertiary-container);
        color: var(--on-tertiary-container);
        padding-inline: 1rem;
        padding-block: 0.1rem;
        font-size: var(--fs-xxs);
        font-weight: 500;
        border: 1px solid var(--outline-variant);
        border-radius: 3rem;
    }
</style>
