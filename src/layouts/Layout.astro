---
import Breadcrumbs from "../components/Breadcrumbs.astro";
import ThemePicker from "../components/ThemePicker.astro";
import "../styles/style.css";
import "../styles/themes.css";
const { title = "page", crumbs = false } = Astro.props;
import "@fontsource-variable/inter";
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Ronnie Nissan | {title}</title>
		<meta
			name="description"
			content="Ronnie Nissan (ronniedroid)'s personal website"
		/>
	</head>
	<body>
		<main>
			<nav class="main-nav">
				<ThemePicker />
				<h1><a href="/">Ronnie Nissan</a></h1>
				<ul>
					<li><a href="/portfolio">Portfolio</a></li>
					<li><a href="/blog">Blog</a></li>
					<li><a href="/poems">Poems</a></li>
					<li><a href="/reading-lists">Reading lists</a></li>
					<li><a href="/about">About</a></li>
				</ul>
			</nav>
			<div class="content-wrapper">
				<header>
					{
						!crumbs ? (
							""
						) : (
							<Breadcrumbs class="breadcrumbs" items={crumbs} />
						)
					}
				</header>
				<div class="content">
					<slot />
				</div>
				<footer>
					<p>
						Copyright (c) 2014-2025 Ronnie Nissan. Website was
						created in 2025. All original content is licensed under
						a free/libre copyleft license (GPLv3 or later or CC
						BY-SA 4.0).
					</p>
				</footer>
			</div>
		</main>
	</body>
</html>

<script is:inline>
	document.querySelectorAll(".main-nav li").forEach((li) => {
		if (li.querySelector(`a[href="${window.location.pathname}"]`)) {
			li.classList.add("active");
		}
	});
</script>

<style>
	main {
		display: grid;
		grid-template-rows: auto 1fr;
	}

	@media (min-width: 1300px) {
		main {
			grid-template-columns: 350px 1fr;
			grid-template-rows: auto;
			align-items: start;
		}
	}

	.main-nav {
		background-color: var(--surface-container);
		color: var(--on-surface);
		padding-inline: 2rem;
		padding-block: 2rem;
		max-width: 100%;
		max-height: min-content;
		display: grid;
		align-items: center;
		justify-items: start;
	}

	@media (min-width: 1300px) {
		.main-nav {
			border: 1px solid var(--outline-variant);
			border-radius: 1rem;

			margin-inline-start: 4rem;
			max-width: fit-content;
			position: sticky;
			top: 4rem;
		}
	}

	.main-nav > ul > li {
		list-style: none;
		font-size: var(--fs-md);
		max-width: 100%;
		display: flex;
		flex-wrap: wrap;
		column-gap: 2rem;
	}

	@media (min-width: 1300px) {
		.main-nav > ul {
			flex-direction: column;
			gap: unset;
		}
	}

	.main-nav > h1 {
		padding-block-end: 1rem;
		font-weight: 600;
		font-size: var(--fs-md);
	}

	.main-nav > h1 > a {
		color: var(--primary);
		text-decoration: none;
	}

	.main-nav li.active > a {
		text-decoration: underline;
		color: var(--primary);
	}

	.content-wrapper {
		padding-inline: 2rem;
		display: grid;
		grid-template-rows: 100px auto auto;
		padding-block-end: 2rem;
		max-width: 100%;
	}

	@media (min-width: 1300px) {
		.content-wrapper {
			height: 100dvh;
		}
	}

	header {
		position: sticky;
		top: 0;
		padding-block-start: 2rem;
		padding-block-end: 2rem;
		background-color: var(--surface);
		z-index: 9999;
		max-width: 100%;
	}

	@media (min-width: 1300px) {
		header {
			padding-block-start: 4rem;
			padding-block-end: 4rem;
		}
	}

	.content {
		max-width: calc(100vw - 4rem);
		padding-block-end: 2rem;
		padding-inline-start: 1rem;
	}

	@media (min-width: 1300px) {
		.content {
			max-width: 75ch;
			padding-block-start: 2rem;
		}
	}

	footer {
		max-height: min-content;
		background-color: var(--surface);
		font-weight: 300;
		color: var(--secondary);
		display: grid;
		align-items: end;
	}

	footer > p {
		max-width: 75ch;
	}
</style>
